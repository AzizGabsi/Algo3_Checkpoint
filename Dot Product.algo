FUNCTION dot_prod (v1 , v2 : ARRAY_OF INTEGER [10];) : INTEGER
VAR
    i , dot :INTEGER
BEGIN
    dot := 0
    i := 0

    IF (v1.length <> v2.length) THEN
        write ("vectors are differently sized! Cannot calculate the PROD")
        dot := NaN
    END_IF

    while (i< v1.length){
        dot := dot + v1[i] * v2[i]
        i++ 
    }

    RETURN dot ;
END


ALGORITHM dotProd
VAR
    v1 ,v2 : ARRAY_OF INTEGER [10]
    i : INTEGER
    dot : INTEGER
BEGIN
    FOR i FROM 0 TO v1.length STEP step 1  DO
        write (" enter the element of " i+1 )
        read (v1[i])
    END_FOR 

    FOR i FROM 0 TO v2.length STEP step 1  DO
        write (" enter the element of " i+1 )
        read (v2[i])
    END_FOR

    dot := dot_product(v1 , v2)
    
    IF (dot := 0) THEN
        write("v1 and v2 are orthogonal")
    ELSE
        write ("v1 and v2 are not orthogonal")
    END_IF



END